{
  "description" : "Example Command with Example String Field",
  "title" : "TestUnionCommand",
  "type" : "object",
  "definitions" : {
    "BoxedId" : {
      "description" : "Base StructureDefinition for id type: Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive.",
      "title" : "BoxedId",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "value" : {
          "description" : "Primitive value for BoxedId",
          "title" : "id",
          "type" : "string"
        }
      }
    },
    "Identifier" : {
      "description" : "Base StructureDefinition for Identifier Type: An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
      "title" : "Identifier",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "period" : {
          "$ref" : "#/definitions/Period",
          "description" : "Time period during which identifier is/was valid for use.",
          "title" : "Period"
        },
        "system" : {
          "description" : "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
          "title" : "uri",
          "type" : "string"
        },
        "type" : {
          "$ref" : "#/definitions/CodeableConcept",
          "description" : "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
          "title" : "CodeableConcept"
        },
        "use" : {
          "description" : "The purpose of this identifier.",
          "title" : "code",
          "type" : "string"
        },
        "value" : {
          "description" : "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
          "title" : "string",
          "type" : "string"
        }
      }
    },
    "BoxedBase64Binary" : {
      "description" : "Base StructureDefinition for base64Binary Type: A stream of bytes",
      "title" : "BoxedBase64Binary",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "value" : {
          "description" : "Primitive value for BoxedBase64Binary",
          "title" : "base64Binary",
          "type" : "string"
        }
      }
    },
    "BoxedBoolean" : {
      "description" : "Base StructureDefinition for boolean Type: Value of \"true\" or \"false\"",
      "title" : "BoxedBoolean",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "value" : {
          "description" : "Primitive value for BoxedBoolean",
          "title" : "boolean",
          "type" : "boolean"
        }
      }
    },
    "BoxedCanonical" : {
      "description" : "Base StructureDefinition for canonical type: A URI that is a reference to a canonical URL on a FHIR resource",
      "title" : "BoxedCanonical",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "value" : {
          "description" : "Primitive value for BoxedCanonical",
          "title" : "canonical",
          "type" : "string"
        }
      }
    },
    "BoxedCode" : {
      "description" : "Base StructureDefinition for code type: A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents",
      "title" : "BoxedCode",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "value" : {
          "description" : "Primitive value for BoxedCode",
          "title" : "code",
          "type" : "string"
        }
      }
    },
    "BoxedDate" : {
      "description" : "Base StructureDefinition for date Type: A date or partial date (e.g. just year or year + month). There is no time zone. The format is a union of the schema types gYear, gYearMonth and date.  Dates SHALL be valid dates.",
      "title" : "BoxedDate",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "value" : {
          "description" : "Primitive value for BoxedDate",
          "title" : "date",
          "type" : "string"
        }
      }
    },
    "BoxedDateTime" : {
      "description" : "Base StructureDefinition for dateTime Type: A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates.",
      "title" : "BoxedDateTime",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "value" : {
          "description" : "Primitive value for BoxedDateTime",
          "title" : "dateTime",
          "type" : "string"
        }
      }
    },
    "BoxedDecimal" : {
      "description" : "Base StructureDefinition for decimal Type: A rational number with implicit precision",
      "title" : "BoxedDecimal",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "value" : {
          "description" : "Primitive value for BoxedDecimal",
          "title" : "decimal",
          "type" : "number"
        }
      }
    },
    "BoxedInstant" : {
      "description" : "Base StructureDefinition for instant Type: An instant in time - known at least to the second",
      "title" : "BoxedInstant",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "value" : {
          "description" : "Primitive value for BoxedInstant",
          "title" : "instant",
          "type" : "string"
        }
      }
    },
    "BoxedInteger" : {
      "description" : "Base StructureDefinition for integer Type: A whole number",
      "title" : "BoxedInteger",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "value" : {
          "description" : "Primitive value for BoxedInteger",
          "title" : "integer",
          "type" : "number"
        }
      }
    },
    "BoxedMarkdown" : {
      "description" : "Base StructureDefinition for markdown type: A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine",
      "title" : "BoxedMarkdown",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "value" : {
          "description" : "Primitive value for BoxedMarkdown",
          "title" : "markdown",
          "type" : "string"
        }
      }
    },
    "BoxedOid" : {
      "description" : "Base StructureDefinition for oid type: An OID represented as a URI",
      "title" : "BoxedOid",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "value" : {
          "description" : "Primitive value for BoxedOid",
          "title" : "oid",
          "type" : "string"
        }
      }
    },
    "BoxedPositiveInt" : {
      "description" : "Base StructureDefinition for positiveInt type: An integer with a value that is positive (e.g. >0)",
      "title" : "BoxedPositiveInt",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "value" : {
          "description" : "Primitive value for BoxedPositiveInt",
          "title" : "positiveInt",
          "type" : "number"
        }
      }
    },
    "BoxedString" : {
      "description" : "Base StructureDefinition for string Type: A sequence of Unicode characters",
      "title" : "BoxedString",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "value" : {
          "description" : "Primitive value for BoxedString",
          "title" : "string",
          "type" : "string"
        }
      }
    },
    "BoxedTime" : {
      "description" : "Base StructureDefinition for time Type: A time during the day, with no date specified",
      "title" : "BoxedTime",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "value" : {
          "description" : "Primitive value for BoxedTime",
          "title" : "time",
          "type" : "string"
        }
      }
    },
    "BoxedUnsignedInt" : {
      "description" : "Base StructureDefinition for unsignedInt type: An integer with a value that is not negative (e.g. >= 0)",
      "title" : "BoxedUnsignedInt",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "value" : {
          "description" : "Primitive value for BoxedUnsignedInt",
          "title" : "unsignedInt",
          "type" : "number"
        }
      }
    },
    "BoxedUri" : {
      "description" : "Base StructureDefinition for uri Type: String of characters used to identify a name or a resource",
      "title" : "BoxedUri",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "value" : {
          "description" : "Primitive value for BoxedUri",
          "title" : "uri",
          "type" : "string"
        }
      }
    },
    "BoxedUrl" : {
      "description" : "Base StructureDefinition for url type: A URI that is a literal reference",
      "title" : "BoxedUrl",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "value" : {
          "description" : "Primitive value for BoxedUrl",
          "title" : "url",
          "type" : "string"
        }
      }
    },
    "BoxedUuid" : {
      "description" : "Base StructureDefinition for uuid type: A UUID, represented as a URI",
      "title" : "BoxedUuid",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "value" : {
          "description" : "Primitive value for BoxedUuid",
          "title" : "uuid",
          "type" : "string"
        }
      }
    },
    "CodeableConcept" : {
      "description" : "Base StructureDefinition for CodeableConcept Type: A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
      "title" : "CodeableConcept",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "coding" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Coding",
            "description" : "A reference to a code defined by a terminology system.",
            "title" : "Coding"
          }
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "text" : {
          "description" : "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.",
          "title" : "string",
          "type" : "string"
        }
      }
    },
    "CodeableReference" : {
      "description" : "Base StructureDefinition for CodeableReference Type: A reference to a resource (by instance), or instead, a reference to a concept defined in a terminology or ontology (by class).",
      "title" : "CodeableReference",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "concept" : {
          "$ref" : "#/definitions/CodeableConcept",
          "description" : "A reference to a concept - e.g. the information is identified by its general class to the degree of precision found in the terminology.",
          "title" : "CodeableConcept"
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "reference" : {
          "description" : "A reference to a resource the provides exact details about the information being referenced.",
          "title" : "Reference",
          "type" : "string"
        }
      }
    },
    "Coding" : {
      "description" : "Base StructureDefinition for Coding Type: A reference to a code defined by a terminology system.",
      "title" : "Coding",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "code" : {
          "description" : "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
          "title" : "code",
          "type" : "string"
        },
        "display" : {
          "description" : "A representation of the meaning of the code in the system, following the rules of the system.",
          "title" : "string",
          "type" : "string"
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "system" : {
          "description" : "The identification of the code system that defines the meaning of the symbol in the code.",
          "title" : "uri",
          "type" : "string"
        },
        "userSelected" : {
          "description" : "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).",
          "title" : "boolean",
          "type" : "boolean"
        },
        "version" : {
          "description" : "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.",
          "title" : "string",
          "type" : "string"
        }
      }
    },
    "DataRequirement" : {
      "description" : "Base StructureDefinition for DataRequirement Type: Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.",
      "title" : "DataRequirement",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "codeFilter" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DataRequirementCodeFilter",
            "description" : "Code filters specify additional constraints on the data, specifying the value set of interest for a particular element of the data. Each code filter defines an additional constraint on the data, i.e. code filters are AND'ed, not OR'ed.",
            "title" : "DataRequirementCodeFilter"
          }
        },
        "dateFilter" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DataRequirementDateFilter",
            "description" : "Date filters specify additional constraints on the data in terms of the applicable date range for specific elements. Each date filter specifies an additional constraint on the data, i.e. date filters are AND'ed, not OR'ed.",
            "title" : "DataRequirementDateFilter"
          }
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "limit" : {
          "description" : "Specifies a maximum number of results that are required (uses the _count search parameter).",
          "title" : "positiveInt",
          "type" : "number"
        },
        "mustSupport" : {
          "type" : "array",
          "items" : {
            "description" : "Indicates that specific elements of the type are referenced by the knowledge module and must be supported by the consumer in order to obtain an effective evaluation. This does not mean that a value is required for this element, only that the consuming system must understand the element and be able to provide values for it if they are available. 

The value of mustSupport SHALL be a FHIRPath resolveable on the type of the DataRequirement. The path SHALL consist only of identifiers, constant indexers, and .resolve() (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details).",
            "title" : "string",
            "type" : "string"
          }
        },
        "profile" : {
          "type" : "array",
          "items" : {
            "description" : "The profile of the required data, specified as the uri of the profile definition.",
            "title" : "canonical",
            "type" : "string"
          }
        },
        "sort" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DataRequirementSort",
            "description" : "Specifies the order of the results to be returned.",
            "title" : "DataRequirementSort"
          }
        },
        "subject" : {
          "$ref" : "#/definitions/CodeableConcept",
          "description" : "The intended subjects of the data requirement. If this element is not provided, a Patient subject is assumed.",
          "title" : "CodeableConcept"
        },
        "type" : {
          "description" : "The type of the required data, specified as the type name of a resource. For profiles, this value is set to the type of the base resource of the profile.",
          "title" : "code",
          "type" : "string"
        }
      },
      "required" : [ "type" ]
    },
    "DataRequirementCodeFilter" : {
      "description" : "Type for anonymous field contained in DataRequirement",
      "title" : "DataRequirementCodeFilter",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "code" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Coding",
            "description" : "The codes for the code filter. If values are given, the filter will return only those data items for which the code-valued attribute specified by the path has a value that is one of the specified codes. If codes are specified in addition to a value set, the filter returns items matching a code in the value set or one of the specified codes.",
            "title" : "Coding"
          }
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "path" : {
          "description" : "The code-valued attribute of the filter. The specified path SHALL be a FHIRPath resolveable on the specified type of the DataRequirement, and SHALL consist only of identifiers, constant indexers, and .resolve(). The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details). Note that the index must be an integer constant. The path must resolve to an element of type code, Coding, or CodeableConcept.",
          "title" : "string",
          "type" : "string"
        },
        "searchParam" : {
          "description" : "A token parameter that refers to a search parameter defined on the specified type of the DataRequirement, and which searches on elements of type code, Coding, or CodeableConcept.",
          "title" : "string",
          "type" : "string"
        },
        "valueSet" : {
          "description" : "The valueset for the code filter. The valueSet and code elements are additive. If valueSet is specified, the filter will return only those data items for which the value of the code-valued element specified in the path is a member of the specified valueset.",
          "title" : "canonical",
          "type" : "string"
        }
      }
    },
    "DataRequirementDateFilter" : {
      "description" : "Type for anonymous field contained in DataRequirement",
      "title" : "DataRequirementDateFilter",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "path" : {
          "description" : "The date-valued attribute of the filter. The specified path SHALL be a FHIRPath resolveable on the specified type of the DataRequirement, and SHALL consist only of identifiers, constant indexers, and .resolve(). The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details). Note that the index must be an integer constant. The path must resolve to an element of type date, dateTime, Period, Schedule, or Timing.",
          "title" : "string",
          "type" : "string"
        },
        "searchParam" : {
          "description" : "A date parameter that refers to a search parameter defined on the specified type of the DataRequirement, and which searches on elements of type date, dateTime, Period, Schedule, or Timing.",
          "title" : "string",
          "type" : "string"
        },
        "value" : {
          "oneOf" : [ {
            "$ref" : "#/definitions/BoxedDateTime",
            "description" : "The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now.",
            "title" : "BoxedDateTime"
          }, {
            "$ref" : "#/definitions/Duration",
            "description" : "The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now.",
            "title" : "Duration"
          }, {
            "$ref" : "#/definitions/Period",
            "description" : "The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now.",
            "title" : "Period"
          } ]
        }
      }
    },
    "DataRequirementSort" : {
      "description" : "Type for anonymous field contained in DataRequirement",
      "title" : "DataRequirementSort",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "direction" : {
          "description" : "The direction of the sort, ascending or descending.",
          "title" : "code",
          "type" : "string"
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "path" : {
          "description" : "The attribute of the sort. The specified path must be resolvable from the type of the required data. The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements. Note that the index must be an integer constant.",
          "title" : "string",
          "type" : "string"
        }
      },
      "required" : [ "path", "direction" ]
    },
    "Duration" : {
      "description" : "Base StructureDefinition for Duration Type: A length of time.",
      "title" : "Duration",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "code" : {
          "description" : "A computer processable form of the unit in some unit representation system.",
          "title" : "code",
          "type" : "string"
        },
        "comparator" : {
          "description" : "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
          "title" : "code",
          "type" : "string"
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "system" : {
          "description" : "The identification of the system that provides the coded form of the unit.",
          "title" : "uri",
          "type" : "string"
        },
        "unit" : {
          "description" : "A human-readable form of the unit.",
          "title" : "string",
          "type" : "string"
        },
        "value" : {
          "description" : "The value of the measured amount. The value includes an implicit precision in the presentation of the value.",
          "title" : "decimal",
          "type" : "number"
        }
      }
    },
    "Expression" : {
      "description" : "Base StructureDefinition for Expression Type: A expression that is evaluated in a specified context and returns a value. The context of use of the expression must specify the context in which the expression is evaluated, and how the result of the expression is used.",
      "title" : "Expression",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "description" : {
          "description" : "A brief, natural language description of the condition that effectively communicates the intended semantics.",
          "title" : "string",
          "type" : "string"
        },
        "expression" : {
          "description" : "An expression in the specified language that returns a value.",
          "title" : "string",
          "type" : "string"
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "language" : {
          "description" : "The media type of the language for the expression.",
          "title" : "code",
          "type" : "string"
        },
        "name" : {
          "description" : "A short name assigned to the expression to allow for multiple reuse of the expression in the context where it is defined.",
          "title" : "id",
          "type" : "string"
        },
        "reference" : {
          "description" : "A URI that defines where the expression is found.",
          "title" : "uri",
          "type" : "string"
        }
      },
      "required" : [ "language" ]
    },
    "Extension" : {
      "description" : "Base StructureDefinition for Extension Type: Optional Extension Element - found in all resources.",
      "title" : "Extension",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "url" : {
          "description" : "Source of the definition for the extension code - a logical name or a URL.",
          "title" : "string",
          "type" : "string"
        },
        "value" : {
          "oneOf" : [ {
            "$ref" : "#/definitions/BoxedBase64Binary",
            "description" : "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "title" : "BoxedBase64Binary"
          }, {
            "$ref" : "#/definitions/BoxedBoolean",
            "description" : "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "title" : "BoxedBoolean"
          }, {
            "$ref" : "#/definitions/BoxedCanonical",
            "description" : "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "title" : "BoxedCanonical"
          }, {
            "$ref" : "#/definitions/BoxedCode",
            "description" : "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "title" : "BoxedCode"
          }, {
            "$ref" : "#/definitions/BoxedDate",
            "description" : "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "title" : "BoxedDate"
          }, {
            "$ref" : "#/definitions/BoxedDateTime",
            "description" : "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "title" : "BoxedDateTime"
          }, {
            "$ref" : "#/definitions/BoxedDecimal",
            "description" : "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "title" : "BoxedDecimal"
          }, {
            "$ref" : "#/definitions/BoxedId",
            "description" : "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "title" : "BoxedId"
          }, {
            "$ref" : "#/definitions/BoxedInstant",
            "description" : "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "title" : "BoxedInstant"
          }, {
            "$ref" : "#/definitions/BoxedInteger",
            "description" : "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "title" : "BoxedInteger"
          }, {
            "$ref" : "#/definitions/BoxedMarkdown",
            "description" : "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "title" : "BoxedMarkdown"
          }, {
            "$ref" : "#/definitions/BoxedOid",
            "description" : "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "title" : "BoxedOid"
          }, {
            "$ref" : "#/definitions/BoxedPositiveInt",
            "description" : "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "title" : "BoxedPositiveInt"
          }, {
            "$ref" : "#/definitions/BoxedString",
            "description" : "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "title" : "BoxedString"
          }, {
            "$ref" : "#/definitions/BoxedTime",
            "description" : "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "title" : "BoxedTime"
          }, {
            "$ref" : "#/definitions/BoxedUnsignedInt",
            "description" : "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "title" : "BoxedUnsignedInt"
          }, {
            "$ref" : "#/definitions/BoxedUri",
            "description" : "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "title" : "BoxedUri"
          }, {
            "$ref" : "#/definitions/BoxedUrl",
            "description" : "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "title" : "BoxedUrl"
          }, {
            "$ref" : "#/definitions/BoxedUuid",
            "description" : "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "title" : "BoxedUuid"
          }, {
            "$ref" : "#/definitions/CodeableConcept",
            "description" : "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "title" : "CodeableConcept"
          }, {
            "$ref" : "#/definitions/CodeableReference",
            "description" : "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "title" : "CodeableReference"
          }, {
            "$ref" : "#/definitions/Coding",
            "description" : "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "title" : "Coding"
          }, {
            "$ref" : "#/definitions/DataRequirement",
            "description" : "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "title" : "DataRequirement"
          }, {
            "$ref" : "#/definitions/Expression",
            "description" : "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "title" : "Expression"
          }, {
            "$ref" : "#/definitions/Identifier",
            "description" : "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "title" : "Identifier"
          }, {
            "$ref" : "#/definitions/ParameterDefinition",
            "description" : "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "title" : "ParameterDefinition"
          }, {
            "$ref" : "#/definitions/Period",
            "description" : "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "title" : "Period"
          }, {
            "$ref" : "#/definitions/Quantity",
            "description" : "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "title" : "Quantity"
          }, {
            "description" : "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "title" : "Reference",
            "type" : "string"
          }, {
            "$ref" : "#/definitions/SimpleQuantity",
            "description" : "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "title" : "SimpleQuantity"
          }, {
            "$ref" : "#/definitions/TriggerDefinition",
            "description" : "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "title" : "TriggerDefinition"
          } ]
        }
      },
      "required" : [ "url" ]
    },
    "ParameterDefinition" : {
      "description" : "Base StructureDefinition for ParameterDefinition Type: The parameters to the module. This collection specifies both the input and output parameters. Input parameters are provided by the caller as part of the $evaluate operation. Output parameters are included in the GuidanceResponse.",
      "title" : "ParameterDefinition",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "documentation" : {
          "description" : "A brief discussion of what the parameter is for and how it is used by the module.",
          "title" : "string",
          "type" : "string"
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "max" : {
          "description" : "The maximum number of times this element is permitted to appear in the request or response.",
          "title" : "string",
          "type" : "string"
        },
        "min" : {
          "description" : "The minimum number of times this parameter SHALL appear in the request or response.",
          "title" : "integer",
          "type" : "number"
        },
        "name" : {
          "description" : "The name of the parameter used to allow access to the value of the parameter in evaluation contexts.",
          "title" : "code",
          "type" : "string"
        },
        "profile" : {
          "description" : "If specified, this indicates a profile that the input data must conform to, or that the output data will conform to.",
          "title" : "canonical",
          "type" : "string"
        },
        "type" : {
          "description" : "The type of the parameter.",
          "title" : "code",
          "type" : "string"
        },
        "use" : {
          "description" : "Whether the parameter is input or output for the module.",
          "title" : "code",
          "type" : "string"
        }
      },
      "required" : [ "use", "type" ]
    },
    "Period" : {
      "description" : "Base StructureDefinition for Period Type: A time period defined by a start and end date and optionally time.",
      "title" : "Period",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "end" : {
          "description" : "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time.",
          "title" : "dateTime",
          "type" : "string"
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "start" : {
          "description" : "The start of the period. The boundary is inclusive.",
          "title" : "dateTime",
          "type" : "string"
        }
      }
    },
    "Quantity" : {
      "description" : "Base StructureDefinition for Quantity Type: A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
      "title" : "Quantity",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "code" : {
          "description" : "A computer processable form of the unit in some unit representation system.",
          "title" : "code",
          "type" : "string"
        },
        "comparator" : {
          "description" : "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
          "title" : "code",
          "type" : "string"
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "system" : {
          "description" : "The identification of the system that provides the coded form of the unit.",
          "title" : "uri",
          "type" : "string"
        },
        "unit" : {
          "description" : "A human-readable form of the unit.",
          "title" : "string",
          "type" : "string"
        },
        "value" : {
          "description" : "The value of the measured amount. The value includes an implicit precision in the presentation of the value.",
          "title" : "decimal",
          "type" : "number"
        }
      }
    },
    "Range" : {
      "description" : "Base StructureDefinition for Range Type: A set of ordered Quantities defined by a low and high limit.",
      "title" : "Range",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "high" : {
          "$ref" : "#/definitions/Quantity",
          "description" : "The high limit. The boundary is inclusive.",
          "title" : "Quantity"
        },
        "low" : {
          "$ref" : "#/definitions/Quantity",
          "description" : "The low limit. The boundary is inclusive.",
          "title" : "Quantity"
        }
      }
    },
    "SimpleQuantity" : {
      "description" : "A fixed quantity (no comparator)",
      "title" : "SimpleQuantity",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "code" : {
          "description" : "A computer processable form of the unit in some unit representation system.",
          "title" : "code",
          "type" : "string"
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "system" : {
          "description" : "The identification of the system that provides the coded form of the unit.",
          "title" : "uri",
          "type" : "string"
        },
        "unit" : {
          "description" : "A human-readable form of the unit.",
          "title" : "string",
          "type" : "string"
        },
        "value" : {
          "description" : "The value of the measured amount. The value includes an implicit precision in the presentation of the value.",
          "title" : "decimal",
          "type" : "number"
        }
      }
    },
    "Timing" : {
      "description" : "Base StructureDefinition for Timing Type: Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.",
      "title" : "Timing",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "code" : {
          "$ref" : "#/definitions/CodeableConcept",
          "description" : "A code for the timing schedule (or just text in code.text). Some codes such as BID are ubiquitous, but many institutions define their own additional codes. If a code is provided, the code is understood to be a complete statement of whatever is specified in the structured timing data, and either the code or the data may be used to interpret the Timing, with the exception that .repeat.bounds still applies over the code (and is not contained in the code).",
          "title" : "CodeableConcept"
        },
        "event" : {
          "type" : "array",
          "items" : {
            "description" : "Identifies specific times when the event occurs.",
            "title" : "dateTime",
            "type" : "string"
          }
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "modifierExtension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "title" : "Extension"
          }
        },
        "repeat" : {
          "$ref" : "#/definitions/TimingRepeat",
          "description" : "A set of rules that describe when the event is scheduled.",
          "title" : "TimingRepeat"
        }
      }
    },
    "TimingRepeat" : {
      "description" : "Type for anonymous field contained in Timing",
      "title" : "TimingRepeat",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "bounds" : {
          "oneOf" : [ {
            "$ref" : "#/definitions/Duration",
            "description" : "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
            "title" : "Duration"
          }, {
            "$ref" : "#/definitions/Period",
            "description" : "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
            "title" : "Period"
          }, {
            "$ref" : "#/definitions/Range",
            "description" : "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
            "title" : "Range"
          } ]
        },
        "count" : {
          "description" : "A total count of the desired number of repetitions across the duration of the entire timing specification. If countMax is present, this element indicates the lower bound of the allowed range of count values.",
          "title" : "positiveInt",
          "type" : "number"
        },
        "countMax" : {
          "description" : "If present, indicates that the count is a range - so to perform the action between [count] and [countMax] times.",
          "title" : "positiveInt",
          "type" : "number"
        },
        "dayOfWeek" : {
          "type" : "array",
          "items" : {
            "description" : "If one or more days of week is provided, then the action happens only on the specified day(s).",
            "title" : "code",
            "type" : "string"
          }
        },
        "duration" : {
          "description" : "How long this thing happens for when it happens. If durationMax is present, this element indicates the lower bound of the allowed range of the duration.",
          "title" : "decimal",
          "type" : "number"
        },
        "durationMax" : {
          "description" : "If present, indicates that the duration is a range - so to perform the action between [duration] and [durationMax] time length.",
          "title" : "decimal",
          "type" : "number"
        },
        "durationUnit" : {
          "description" : "The units of time for the duration, in UCUM units.",
          "title" : "code",
          "type" : "string"
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "frequency" : {
          "description" : "The number of times to repeat the action within the specified period. If frequencyMax is present, this element indicates the lower bound of the allowed range of the frequency.",
          "title" : "positiveInt",
          "type" : "number"
        },
        "frequencyMax" : {
          "description" : "If present, indicates that the frequency is a range - so to repeat between [frequency] and [frequencyMax] times within the period or period range.",
          "title" : "positiveInt",
          "type" : "number"
        },
        "offset" : {
          "description" : "The number of minutes from the event. If the event code does not indicate whether the minutes is before or after the event, then the offset is assumed to be after the event.",
          "title" : "unsignedInt",
          "type" : "number"
        },
        "period" : {
          "description" : "Indicates the duration of time over which repetitions are to occur; e.g. to express \"3 times per day\", 3 would be the frequency and \"1 day\" would be the period. If periodMax is present, this element indicates the lower bound of the allowed range of the period length.",
          "title" : "decimal",
          "type" : "number"
        },
        "periodMax" : {
          "description" : "If present, indicates that the period is a range from [period] to [periodMax], allowing expressing concepts such as \"do this once every 3-5 days.",
          "title" : "decimal",
          "type" : "number"
        },
        "periodUnit" : {
          "description" : "The units of time for the period in UCUM units.",
          "title" : "code",
          "type" : "string"
        },
        "timeOfDay" : {
          "type" : "array",
          "items" : {
            "description" : "Specified time of day for action to take place.",
            "title" : "time",
            "type" : "string"
          }
        },
        "when" : {
          "type" : "array",
          "items" : {
            "description" : "An approximate time period during the day, potentially linked to an event of daily living that indicates when the action should occur.",
            "title" : "code",
            "type" : "string"
          }
        }
      }
    },
    "TriggerDefinition" : {
      "description" : "Base StructureDefinition for TriggerDefinition Type: A description of a triggering event. Triggering events can be named events, data events, or periodic, as determined by the type element.",
      "title" : "TriggerDefinition",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "title" : "string",
          "type" : "string"
        },
        "condition" : {
          "$ref" : "#/definitions/Expression",
          "description" : "A boolean-valued expression that is evaluated in the context of the container of the trigger definition and returns whether or not the trigger fires.",
          "title" : "Expression"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DataRequirement",
            "description" : "The triggering data of the event (if this is a data trigger). If more than one data is requirement is specified, then all the data requirements must be true.",
            "title" : "DataRequirement"
          }
        },
        "extension" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Extension",
            "description" : "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "title" : "Extension"
          }
        },
        "name" : {
          "description" : "A formal name for the event. This may be an absolute URI that identifies the event formally (e.g. from a trigger registry), or a simple relative URI that identifies the event in a local context.",
          "title" : "string",
          "type" : "string"
        },
        "timing" : {
          "oneOf" : [ {
            "$ref" : "#/definitions/BoxedDate",
            "description" : "The timing of the event (if this is a periodic trigger).",
            "title" : "BoxedDate"
          }, {
            "$ref" : "#/definitions/BoxedDateTime",
            "description" : "The timing of the event (if this is a periodic trigger).",
            "title" : "BoxedDateTime"
          }, {
            "$ref" : "#/definitions/Timing",
            "description" : "The timing of the event (if this is a periodic trigger).",
            "title" : "Timing"
          } ]
        },
        "type" : {
          "description" : "The type of triggering event.",
          "title" : "code",
          "type" : "string"
        }
      },
      "required" : [ "type" ]
    }
  },
  "properties" : {
    "exampleUnionField" : {
      "oneOf" : [ {
        "$ref" : "#/definitions/BoxedInteger",
        "description" : "",
        "title" : "BoxedInteger"
      }, {
        "$ref" : "#/definitions/BoxedString",
        "description" : "",
        "title" : "BoxedString"
      } ]
    }
  },
  "required" : [ "exampleUnionField" ]
}